{"version":3,"sources":["component/VisualTools/Chart/PieChart.js"],"names":["Component","PieChart","props","self","React","createRef","tooltip","state","margin","top","right","bottom","left","loading","error","data","d3","nest","key","d","fields","x","rollup","v","length","entries","forEach","selected","sum","value","console","log","filters","filter","f","id","pies","attr","color","rect","current","getBoundingClientRect","innerWidth","width","innerHeight","height","radius","Math","min","arcs","pie","sortValues","a","b","arc","innerRadius","outerRadius","scaleOrdinal","domain","map","range","quantize","t","interpolateSpectral","svg","viewer","select","append","selectAll","join","on","i","values","reduce","push","title","field","operation","filterAdded","filterRemove","text","format"],"mappings":"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","file":"PieChart.d9e0ea2f.js","sourceRoot":"../source","sourcesContent":["import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nexport default class PieChart extends Component {\n  constructor(props) {\n    super(props);\n    this.self = React.createRef();\n    this.tooltip = React.createRef();\n    this.state = {\n      margin: {top: 5, right: 5, bottom: 5, left: 5},\n      loading: true,\n      error: null\n    };\n\n    const data = d3.nest()\n    .key(function(d) { return d[props.fields.x]; })\n\n    .rollup(function(v) { return v.length; })\n    .entries(props.data)\n    data.forEach(d=>{\n      d.selected = false;\n    })\n    this.state.data = data;\n    this.sum = d3.sum(this.state.data,d=>d.value)\n     \n  }\n\n  componentDidUpdate() {\n    console.log('pie did update')\n    const filters = this.props.filters.filter(f=>f.id==this.props.id)\n    if(filters.length > 0){ // has filters\n      this.pies\n      .attr(\"fill\",d=> d.data.selected?this.color(d.data.key):'#C0C0C0')\n      .attr('fill-opacity',d=> d.data.selected?1:.5)\n      .attr('stroke','#CCCCCC')\n      .attr('stroke-width',d=> d.data.selected?3:0)\n    }else{\n      this.state.data.forEach(d=>d.selected = false)\n      this.pies.attr(\"fill\", d => this.color(d.data.key))\n      .attr('fill-opacity',1)\n      .attr('stroke','none')\n    }\n  }\n\n  componentDidMount() {\n    \n    const rect = this.self.current.getBoundingClientRect();\n    const innerWidth = rect.width - this.state.margin.left - this.state.margin.right;\n    const innerHeight = rect.height - this.state.margin.top - this.state.margin.bottom;\n    const radius = Math.min(innerWidth, innerHeight)/2\n    const pie = d3.pie().sortValues((a,b)=>b-a).value(d => d.value)\n    \n    const arcs = pie(this.state.data);\n    \n    const arc = d3.arc().innerRadius(0).outerRadius(radius)\n    \n    const arcLabel = d3.arc().innerRadius(radius).outerRadius(radius);\n\n    this.color = d3.scaleOrdinal()\n    .domain(this.state.data.map(d => d.key))\n    .range(d3.quantize(t => d3.interpolateSpectral(t), this.state.data.length))\n    \n    const svg = d3.select(this.self.current)\n      .append(\"svg\")\n        .attr(\"width\", rect.width)\n        .attr(\"height\", rect.height)\n    \n    const viewer = svg.append(\"g\")\n        //.attr(\"stroke\", \"white\")\n        .attr(\"transform\", `translate(${(innerWidth / 2 + this.state.margin.left)},${innerHeight/ 2 + this.state.margin.top})`)\n    \n    this.pies = viewer.selectAll(\"path\")\n      .data(arcs)\n      .join(\"path\")\n      .attr(\"class\",\"slide\")\n      // .attr(\"id\",(d,i)=>i)\n        .attr(\"fill\", d => this.color(d.data.key))\n        .attr(\"d\", arc)\n        .on('click', (d, i) =>{\n          // viewer.selectAll(\".slide\").attr('opacity',0.2)\n          // const selected = this.pies.filter(function(d){\n          //   return d === data\n          // })\n          console.log('click')\n          d.data.selected = !d.data.selected;\n          const values = this.state.data.reduce((values,d)=>{\n            if(d.selected) values.push(d.key)\n            return values;\n          },[])\n\n\n          if(values.length > 0){ // has filters\n            this.pies\n            .attr(\"fill\",d=> d.data.selected?this.color(d.data.key):'#C0C0C0')\n            .attr('fill-opacity',d=> d.data.selected?1:.5)\n            .attr('stroke','#CCCCCC')\n            .attr('stroke-width',d=> d.data.selected?3:0)\n            const filter = {\n              id:this.props.id,\n              title:this.props.title,\n              field:this.props.fields.x,\n              operation:'in',\n              values:values\n            }\n            this.props.filterAdded([filter])\n          }else{\n            this.pies.attr(\"fill\", d => this.color(d.data.key))\n            .attr('fill-opacity',1)\n            .attr('stroke','none')\n\n            this.props.filterRemove(this.props.id)\n          }\n\n      })\n      this.pies.append('title').text(d=> `${d.data.key}:${d.data.value}:${d3.format(\".0%\")(d.data.value/this.sum)}`)\n    //   .on(\"mousemove\", function(d){\n    //     console.log(this)\n    //     d3.select(this.tooltip.current)\n    //       .style(\"left\", 0 + \"px\")\n    //       .style(\"top\", 0 + \"px\")\n    //       .style(\"display\", \"inline-block\")\n    //       .style(\"position\", \"absolute\")\n    //       .style(\"color\",\"grey\")\n    //       .style(\"background\",\"white\")\n    //       .style(\"z-index\",999)\n    //       .html( (d.data[this.state.fields.x]) + \"<br>\" +(d.value));\n    // }.bind(this))\n    // .on(\"mouseout\", function(d){ d3.select(this.tooltip.current).style(\"display\", \"none\");}.bind(this));\n      \n    // svg.append(\"g\")\n    //     .attr(\"font-family\", \"sans-serif\")\n    //     .attr(\"font-size\", 12)\n    //     .attr(\"text-anchor\", \"middle\")\n    //   .selectAll(\"text\")\n    //   .data(arcs)\n    //   .join(\"text\")\n    //     .attr(\"transform\", d => `translate(${arcLabel.centroid(d)})`)\n    //     .call(text => text.append(\"tspan\")\n    //         .attr(\"y\", \"-0.4em\")\n    //         .attr(\"font-weight\", \"bold\")\n    //         .text(d => d.data[this.state.fields.x]))\n    //     .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.25).append(\"tspan\")\n    //         .attr(\"x\", 0)\n    //         .attr(\"y\", \"0.7em\")\n    //         .attr(\"fill-opacity\", 0.7)\n    //         .text(d => d.data[this.state.fields.y].toLocaleString()));\n\n  }\n  \n  render() {\n\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        <div\n        id={this.props.id}\n        ref={this.self}\n        style={{ width: \"100%\", height: \"100%\" }}\n        ></div>\n        <div ref={this.tooltip} className=\"tooltip\" ></div>\n      </div>\n    );\n  }\n}\n"]}